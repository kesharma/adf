{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "externalCall1",
					"linkedService": {
						"referenceName": "RestBing",
						"type": "LinkedServiceReference"
					}
				}
			],
			"scriptLines": [
				"source(output(",
				"          {_col0_} as string,",
				"          {_col1_} as string,",
				"          {_col2_} as string,",
				"          {_col3_} as string,",
				"          {_col4_} as string,",
				"          {_col5_} as string,",
				"          {_col6_} as string,",
				"          {_col7_} as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'adhocextract',",
				"     folderPath: 'smallFile',",
				"     fileName: 'ArrayOfJson.json',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false) ~> source1",
				"source1 call(mapColumn(",
				"          {_col0_},",
				"          {_col1_},",
				"          {_col2_},",
				"          {_col3_},",
				"          {_col4_},",
				"          {_col5_},",
				"          {_col6_},",
				"          {_col7_}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     output(",
				"          headers as [string,string],",
				"          status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     format: 'rest',",
				"     store: 'restservice',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     httpMethod: 'GET',",
				"     headerColumnName: 'headers',",
				"     bodyColumnName: 'body',",
				"     statusColumnName: 'status',",
				"     addResponseCode: true,",
				"     requestFormat: ['type' -> 'json'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'documentPerLine']) ~> externalCall1"
			]
		}
	}
}